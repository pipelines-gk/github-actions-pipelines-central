name: Slack Notification Workflow

on:
  workflow_call:
    inputs:
      workflow_status:
        required: true
        type: string

jobs:
  notify_slack:
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Map Slack values
        id: vars
        run: |
          if [ "${{ inputs.workflow_status }}" = "success" ]; then
            echo "emoji=🚀" >> $GITHUB_OUTPUT
            echo "color=good" >> $GITHUB_OUTPUT
          else
            echo "emoji=❌" >> $GITHUB_OUTPUT
            echo "color=danger" >> $GITHUB_OUTPUT
          fi

      - name: Escape commit message
        id: commit
        run: |
          MESSAGE="${{ github.event.head_commit.message }}"
          if [ -z "$MESSAGE" ]; then
            MESSAGE="Manual workflow dispatch"
          fi
          ESCAPED=$(jq -n --arg msg "$MESSAGE" '$msg')
          echo "message=$ESCAPED" >> $GITHUB_OUTPUT

      - name: Prepare Slack Payload with jq
        id: payload
        run: |
          EMOJI="${{ steps.vars.outputs.emoji }}"
          WORKFLOW="${{ github.workflow }}"
          STATUS="${{ inputs.workflow_status }}"
          REPO="${{ github.repository }}"
          COLOR="${{ steps.vars.outputs.color }}"
          COMMIT_MSG=$(echo '${{ fromJson(steps.commit.outputs.message) }}')
          BRANCH="${{ github.ref_name }}"
          SERVER_URL="${{ github.server_url }}"
          RUN_ID="${{ github.run_id }}"
          
          jq -n \
            --arg emoji "$EMOJI" \
            --arg workflow "$WORKFLOW" \
            --arg status "$STATUS" \
            --arg repo "$REPO" \
            --arg color "$COLOR" \
            --arg commit_msg "$COMMIT_MSG" \
            --arg branch "$BRANCH" \
            --arg server_url "$SERVER_URL" \
            --arg run_id "$RUN_ID" \
            '{
              "text": $emoji + " Workflow *" + $workflow + "* terminó con estado *" + $status + "* en *" + $repo + "*",
              "attachments": [
                {
                  "color": $color,
                  "blocks": [
                    {
                      "type": "section",
                      "text": {
                        "type": "mrkdwn",
                        "text": "*Commit:* " + $commit_msg + "\n*Branch:* " + $branch
                      }
                    },
                    {
                      "type": "actions",
                      "elements": [
                        {
                          "type": "button",
                          "text": {
                            "type": "plain_text",
                            "text": "Ver en GitHub"
                          },
                          "url": $server_url + "/" + $repo + "/actions/runs/" + $run_id
                        }
                      ]
                    }
                  ]
                }
              ]
            }' > payload.json
          
          cat payload.json

      - name: Send Notification to Slack
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload-file-path: "./payload.json"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL || 'https://hooks.slack.com/services/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' }}