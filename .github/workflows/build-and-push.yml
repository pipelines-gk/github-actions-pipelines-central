name: Build and Push Docker Image

on:
  workflow_call:
    inputs:
      project_name:
        required: true
        type: string
      node_version:
        required: false
        default: "22"
        type: string
      env_file_artifact:
        required: true
        type: string
      github_token:
        required: true
        type: string
      run_id:
        required: true
        type: string
    secrets:
      GH_TOKEN:
        required: true
      DOCR_USERNAME:
        required: true
      DOCR_PASSWORD:
        required: true

permissions:
  contents: read
  packages: write
  actions: read

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node_version }}
          cache: "npm"

      #   LOG DOCR_USERNAME AND DOCR_PASSWORD
      - name: Log DOCR Credentials
        run: |
          echo "DOCR_USERNAME: ${{ secrets.DOCR_USERNAME }}"
          echo "DOCR_PASSWORD: ${{ secrets.DOCR_PASSWORD }}"

      - name: Download .env file
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.env_file_artifact }}
          path: .
          github-token: ${{ inputs.github_token }}
          run-id: ${{ inputs.run_id }}

      - name: Create .env from artifact
        run: |
          echo "🔍 Creando .env desde artifact..."
          if [ ! -f "raw_content.txt" ]; then
            echo "❌ ERROR: Archivo raw_content.txt no encontrado"
            exit 1
          fi
          cat raw_content.txt | grep -v '^#' > .env
          echo "✅ Archivo .env creado"

      - name: Verify .env file
        run: |
          echo "🔍 Verificando archivo .env..."
          if [ ! -f ".env" ]; then
            echo "❌ ERROR: Archivo .env no encontrado"
            exit 1
          fi
          echo "📊 Tamaño: $(wc -c < .env) bytes"
          echo "📊 Variables: $(grep -c "=" .env)"
          echo "✅ Archivo .env verificado"

      - name: Install dependencies
        run: npm ci

      - name: Docker Setup
        uses: docker/setup-buildx-action@v3

      - name: Login to DOCR
        uses: docker/login-action@v3
        with:
          registry: registry.digitalocean.com
          username: ${{ secrets.DOCR_USERNAME }}
          password: ${{ secrets.DOCR_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            registry.digitalocean.com/gainkode/${{ inputs.project_name }}:latest
            registry.digitalocean.com/gainkode/${{ inputs.project_name }}:v${{ env.VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
