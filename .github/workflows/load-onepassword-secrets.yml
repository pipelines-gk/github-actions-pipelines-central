name: Load OnePassword Env

on:
  workflow_call:
    inputs:
      project_name:
        description: "Project name used in the OnePassword path"
        required: true
        type: string
    secrets:
      ONE_PASSWORD_SERVICE_ACCOUNT_TOKEN:
        description: "1Password service account token"
        required: true

jobs:
  load-onepassword-secrets:
    runs-on: ubuntu-latest
    outputs:
      # Set the base64 encoded content of the .env file as output
      encoded_env: ${{ steps.set-env.outputs.encoded_env }}
    steps:
      - name: Checkout repository (if needed)
        uses: actions/checkout@v4
        # English: Check out the repository if necessary

      - name: Load secret from OnePassword
        # English: Retrieve the secret from OnePassword and export it into the environment
        uses: 1password/load-secrets-action@v2
        with:
          export-env: true
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.ONE_PASSWORD_SERVICE_ACCOUNT_TOKEN }}
          # English: The secret must include the complete .env content
          ENV_CONTENT: op://yclp7kgj7vku4d3wovopw2jabm/${{ inputs.project_name }}/.env

      - name: Debug - Show ENV_CONTENT length
        run: |
          if [ -z "${ENV_CONTENT}" ]; then
            echo "ENV_CONTENT is empty!"
            exit 1
          else
            echo "ENV_CONTENT length: ${#ENV_CONTENT}"
          fi
        env:
          ENV_CONTENT: ${{ env.ENV_CONTENT }}

      - name: Create .env file
        env:
          ENV_CONTENT: ${{ env.ENV_CONTENT }}
        run: |
          set -o nounset
          # English: Write the content of ENV_CONTENT into the .env file
          echo "$ENV_CONTENT" > .env
          echo "Content of .env file (raw):"
          cat .env

      - name: List working directory files
        run: ls -la

      - name: Verify .env file creation
        run: |
          if [ ! -s .env ]; then
            echo ".env file is empty or was not created!"
            exit 1
          fi

      - name: Set base64 encoded .env as output
        id: set-env
        run: |
          # English: Encode the .env file to base64 and set it as output
          encoded=$(base64 .env)
          echo "encoded_env=$encoded" >> $GITHUB_OUTPUT
