name: Load OnePassword Env

on:
  workflow_call:
    inputs:
      project_name:
        description: "Project name used in the OnePassword path"
        required: true
        type: string
    secrets:
      ONE_PASSWORD_SERVICE_ACCOUNT_TOKEN:
        description: "1Password service account token"
        required: true

jobs:
  load-onepassword-secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository (if needed)
        uses: actions/checkout@v4

      - name: Load secret from 1Password
        # This step retrieves the secret and (thanks to export-env: true) sets it in the environment.
        uses: 1password/load-secrets-action@v2
        with:
          export-env: true
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.ONE_PASSWORD_SERVICE_ACCOUNT_TOKEN }}
          # The URI below will be resolved to the actual secret content and then stored in ENV_CONTENT.
          ENV_CONTENT: op://yclp7kgj7vku4d3wovopw2jabm/${{ inputs.project_name }}/.env

      - name: "Debug - Show ENV_CONTENT length"
        run: |
          if [ -z "${{ env.ENV_CONTENT }}" ]; then
            echo "ENV_CONTENT is empty!"
            exit 1
          else
            echo "ENV_CONTENT length: ${#ENV_CONTENT}"
          fi

      - name: Export variables to .env file
        env:
          # Se utiliza la variable de entorno exportada por el action.
          ENV_CONTENT: ${{ env.ENV_CONTENT }}
        run: |
          set -o nounset
          # Write ENV_CONTENT to .env after filtering out lines that start with '#'
          echo "$ENV_CONTENT" | grep -v '^#' > .env
          # For debugging: show the content of .env
          echo "Content of .env file:"
          cat .env

      - name: Export variables from ENV_CONTENT to GitHub environment
        env:
          ENV_CONTENT: ${{ env.ENV_CONTENT }}
        run: |
          # For each non-comment line, append it to the GitHub environment file.
          echo "$ENV_CONTENT" | grep -v '^#' | while IFS= read -r line; do
            echo "$line" >> $GITHUB_ENV
          done

      - name: Read .env file (for debugging)
        run: |
          echo "Final .env file content:"
          cat .env

      - name: Upload .env artifact
        uses: actions/upload-artifact@v4
        with:
          name: env-artifact-${{ inputs.project_name }}
          path: .env
          if-no-files-found: error
