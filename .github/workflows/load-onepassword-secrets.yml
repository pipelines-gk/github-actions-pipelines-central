name: Load OnePassword Env

on:
  workflow_call:
    inputs:
      project_name:
        description: "Project name used in the OnePassword path"
        required: true
        type: string
    secrets:
      ONE_PASSWORD_SERVICE_ACCOUNT_TOKEN:
        description: "1Password service account token"
        required: true

jobs:
  load-onepassword-secrets:
    runs-on: ubuntu-latest
    outputs:
      # This output 'env_file' will contain the content of the .env file
      env_file: ${{ steps.set-env.outputs.env_file }}
    steps:
      - name: Checkout repository (if needed)
        uses: actions/checkout@v4

      - name: Load secret from OnePassword
        # This step retrieves the secret and exports it into the environment.
        uses: 1password/load-secrets-action@v2
        with:
          export-env: true
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.ONE_PASSWORD_SERVICE_ACCOUNT_TOKEN }}
          # The URI should point to the secret content, which must include the DOCR variables.
          ENV_CONTENT: op://yclp7kgj7vku4d3wovopw2jabm/${{ inputs.project_name }}/.env

      - name: Debug - Show ENV_CONTENT length
        run: |
          if [ -z "${ENV_CONTENT}" ]; then
            echo "ENV_CONTENT is empty!"
            exit 1
          else
            echo "ENV_CONTENT length: ${#ENV_CONTENT}"
          fi
        env:
          ENV_CONTENT: ${{ env.ENV_CONTENT }}

      - name: Create .env file
        env:
          ENV_CONTENT: ${{ env.ENV_CONTENT }}
        run: |
          set -o nounset
          # Write ENV_CONTENT to .env (without filtering to ensure no content is removed)
          echo "$ENV_CONTENT" > .env
          echo "Content of .env file (raw):"
          cat .env

      - name: Verify .env file creation
        run: |
          if [ ! -s .env ]; then
            echo ".env file is empty or was not created!"
            exit 1
          fi

      - name: Set .env file content as output
        id: set-env
        run: |
          # Set the content of .env as output using GitHub Actions' recommended syntax
          echo "env_file<<EOF" >> $GITHUB_OUTPUT
          cat .env >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
