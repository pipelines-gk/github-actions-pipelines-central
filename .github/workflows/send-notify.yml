name: Telegram Notification Workflow

on:
  workflow_call:
    inputs:
      workflow_status:
        required: true
        type: string
    secrets:
      GH_TOKEN:
        required: true
      TELEGRAM_BOT_TOKEN:
        required: true
      TELEGRAM_CHAT_ID:
        required: true

jobs:
  notify_telegram:
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Map Telegram values
        id: vars
        run: |
          if [ "${{ inputs.workflow_status }}" = "success" ]; then
            echo "emoji=✅" >> $GITHUB_OUTPUT
          else
            echo "emoji=❌" >> $GITHUB_OUTPUT
          fi

      - name: Prepare commit message
        id: commit
        run: |
          MESSAGE="${{ github.event.head_commit.message }}"
          if [ -z "$MESSAGE" ]; then
            MESSAGE="Manual workflow dispatch"
          fi
          CLEAN_MESSAGE=$(echo "$MESSAGE" | sed ':a;N;$!ba;s/\n/\\n/g')
          echo "message=$CLEAN_MESSAGE" >> $GITHUB_OUTPUT

      - name: Send Telegram Notification
        run: |
          TEXT="${{ steps.vars.outputs.emoji }} *${{ github.workflow }}* terminó con estado *${{ inputs.workflow_status }}* en \`${{ github.repository }}\`%0A*Commit:* ${{ steps.commit.outputs.message }}%0A*Branch:* \`${{ github.ref_name }}\`%0A👉 [Ver en GitHub](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})"
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d parse_mode=Markdown \
            -d text="$TEXT"
