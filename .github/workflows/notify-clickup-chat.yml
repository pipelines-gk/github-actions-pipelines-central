name: ClickUp Chat Notification Workflow

on:
  workflow_call:
    inputs:
      workflow_status:
        required: true
        type: string

jobs:
  notify_clickup:
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Map ClickUp values
        id: vars
        run: |
          if [ "${{ inputs.workflow_status }}" = "success" ]; then
            echo "emoji=‚úÖ" >> $GITHUB_OUTPUT
            echo "status_text=SUCCESS" >> $GITHUB_OUTPUT
          else
            echo "emoji=‚ùå" >> $GITHUB_OUTPUT
            echo "status_text=FAILED" >> $GITHUB_OUTPUT
          fi

      - name: Prepare commit message
        id: commit
        run: |
          MESSAGE="${{ github.event.head_commit.message }}"
          if [ -z "$MESSAGE" ]; then
            MESSAGE="Manual workflow dispatch"
          fi
          # Clean message for JSON (escape quotes and newlines)
          CLEAN_MESSAGE=$(echo "$MESSAGE" | sed 's/"/\\"/g' | sed ':a;N;$!ba;s/\n/\\n/g')
          echo "message=$CLEAN_MESSAGE" >> $GITHUB_OUTPUT

      - name: Send ClickUp Chat Notification
        run: |
          # ClickUp API configuration (hardcoded for testing)
          API_KEY="pk_94738230_DDW5KAZV4KKOQVPNO6D4CWNGYMY2FG6U"
          WORKSPACE_ID="90151289626"
          CHANNEL_ID="2kypz0ru-10335"
          
          echo "üîß Debug Info:"
          echo "API_KEY: ${API_KEY:0:15}..."
          echo "WORKSPACE_ID: $WORKSPACE_ID"
          echo "CHANNEL_ID: $CHANNEL_ID"
          echo "Workflow Status: ${{ inputs.workflow_status }}"
          echo "Emoji: ${{ steps.vars.outputs.emoji }}"
          echo "Status Text: ${{ steps.vars.outputs.status_text }}"
          
          # Prepare message content (simplified for testing)
          MESSAGE_CONTENT="${{ steps.vars.outputs.emoji }} **${{ github.workflow }}** termin√≥ con estado **${{ steps.vars.outputs.status_text }}** en \`${{ github.repository }}\`

**Commit:** ${{ steps.commit.outputs.message }}
**Branch:** \`${{ github.ref_name }}\`
**Run ID:** ${{ github.run_id }}

üëâ [Ver en GitHub](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})"
          
          echo "üìù Message Content:"
          echo "$MESSAGE_CONTENT"
          echo "üìù Message Length: ${#MESSAGE_CONTENT}"
          
          # Install jq for proper JSON handling
          sudo apt-get update && sudo apt-get install -y jq
          
          # Create JSON payload with proper escaping using jq
          JSON_PAYLOAD=$(jq -n \
            --arg content "$MESSAGE_CONTENT" \
            --arg format "text/md" \
            '{content: $content, content_format: $format}')
          
          echo "üì¶ JSON Payload:"
          echo "$JSON_PAYLOAD"
          
          # Send message to ClickUp with verbose output
          echo "üöÄ Sending to ClickUp..."
          RESPONSE=$(curl -s -w "\nHTTP_CODE:%{http_code}\n" -X POST \
            -H "Authorization: $API_KEY" \
            -H "Content-Type: application/json" \
            -d "$JSON_PAYLOAD" \
            "https://api.clickup.com/api/v3/workspaces/$WORKSPACE_ID/chat/channels/$CHANNEL_ID/messages")
          
          echo "üì° ClickUp Response:"
          echo "$RESPONSE"
          
          # Extract HTTP code
          HTTP_CODE=$(echo "$RESPONSE" | grep "HTTP_CODE:" | cut -d: -f2)
          
          if [ "$HTTP_CODE" = "200" ] || [ "$HTTP_CODE" = "201" ]; then
            echo "‚úÖ ClickUp notification sent successfully (HTTP $HTTP_CODE)"
          else
            echo "‚ùå ClickUp notification failed (HTTP $HTTP_CODE)"
            echo "Full Response: $RESPONSE"
            
            # Try a simple test message
            echo "üîÑ Trying simple test message..."
            SIMPLE_PAYLOAD='{"content": "Test from GitHub Actions", "content_format": "text/md"}'
            SIMPLE_RESPONSE=$(curl -s -w "\nHTTP_CODE:%{http_code}\n" -X POST \
              -H "Authorization: $API_KEY" \
              -H "Content-Type: application/json" \
              -d "$SIMPLE_PAYLOAD" \
              "https://api.clickup.com/api/v3/workspaces/$WORKSPACE_ID/chat/channels/$CHANNEL_ID/messages")
            
            echo "Simple test response: $SIMPLE_RESPONSE"
            exit 1
          fi

      - name: Log notification details
        run: |
          echo "Notification sent with status: ${{ inputs.workflow_status }}"
          echo "Repository: ${{ github.repository }}"
          echo "Workflow: ${{ github.workflow }}"
          echo "Run ID: ${{ github.run_id }}"
